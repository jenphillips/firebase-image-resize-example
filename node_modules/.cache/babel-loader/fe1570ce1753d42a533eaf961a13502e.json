{"ast":null,"code":"import _classCallCheck from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jenniferpierce/Code/example2/src/pages/capsules/forms/AddCapsuleForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nvar AddCapsule =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddCapsule, _Component);\n\n  function AddCapsule() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddCapsule);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddCapsule)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      capsule: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddCapsule, [{\n    key: \"addCapsule\",\n    value: function addCapsule() {\n      this.props.firestore.add({\n        collection: 'capsules'\n      }, {\n        userID: this.props.uid,\n        name: this.state.capsule,\n        garments: []\n      });\n      this.setState({\n        capsule: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.uid) return null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.capsule,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            capsule: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this2.addCapsule();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add Capsule\"));\n    }\n  }]);\n\n  return AddCapsule;\n}(Component);\n\nAddCapsule.propTypes = {\n  uid: PropTypes.string,\n  firestore: PropTypes.shape({\n    add: PropTypes.func.isRequired\n  }).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uid: state.firebase.auth.uid\n  };\n};\n\nexport default compose(connect(mapStateToProps, null), firestoreConnect())(AddCapsule);","map":{"version":3,"sources":["/Users/jenniferpierce/Code/example2/src/pages/capsules/forms/AddCapsuleForm.js"],"names":["React","Component","PropTypes","connect","compose","firestoreConnect","AddCapsule","state","capsule","props","firestore","add","collection","userID","uid","name","garments","setState","event","target","value","addCapsule","propTypes","string","shape","func","isRequired","mapStateToProps","firebase","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UAQJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;iCAEM;AACZ,WAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CACE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OADF,EAEE;AACEC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,GADrB;AAEEC,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,OAFnB;AAGEQ,QAAAA,QAAQ,EAAE;AAHZ,OAFF;AAQA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;;6BAEQ;AAAA;;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWK,GAAhB,EAAqB,OAAO,IAAP;AAErB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAFpB;AAGE,QAAA,QAAQ,EAAE,kBAACU,KAAD;AAAA,iBAAW,MAAI,CAACD,QAAL,CAAc;AAAET,YAAAA,OAAO,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAAxB,WAAd,CAAX;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAQ,QAAA,OAAO,EAAE,iBAACF,KAAD;AAAA,iBAAW,MAAI,CAACG,UAAL,EAAX;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CADF;AAUD;;;;EAnCsBpB,S;;AAAnBK,U,CACGgB,S,GAAY;AACjBR,EAAAA,GAAG,EAAEZ,SAAS,CAACqB,MADE;AAEjBb,EAAAA,SAAS,EAAER,SAAS,CAACsB,KAAV,CAAgB;AACzBb,IAAAA,GAAG,EAAET,SAAS,CAACuB,IAAV,CAAeC;AADK,GAAhB,EAERA;AAJc,C;;AAsCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAApB,KAAK;AAAA,SAAK;AAChCO,IAAAA,GAAG,EAAEP,KAAK,CAACqB,QAAN,CAAeC,IAAf,CAAoBf;AADO,GAAL;AAAA,CAA7B;;AAIA,eAAeV,OAAO,CACpBD,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CADa,EAEpBtB,gBAAgB,EAFI,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\n\nclass AddCapsule extends Component {\n  static propTypes = {\n    uid: PropTypes.string,\n    firestore: PropTypes.shape({\n      add: PropTypes.func.isRequired\n    }).isRequired\n  }\n\n  state = { capsule: '' }\n\n  addCapsule () {\n    this.props.firestore.add(\n      { collection: 'capsules' },\n      {\n        userID: this.props.uid,\n        name: this.state.capsule,\n        garments: []\n      }\n    )\n    this.setState({ capsule: '' })\n  }\n\n  render() {\n    if (!this.props.uid) return null\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          value={this.state.capsule}\n          onChange={(event) => this.setState({ capsule: event.target.value })}\n        />\n        <button onClick={(event) => this.addCapsule()}>Add Capsule</button>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  uid: state.firebase.auth.uid\n})\n\nexport default compose(\n  connect(mapStateToProps, null),\n  firestoreConnect()\n)(AddCapsule)\n"]},"metadata":{},"sourceType":"module"}