{"ast":null,"code":"import _toConsumableArray from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jenniferpierce/Code/example2/src/pages/closet/AddCategoryForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Button, Modal } from 'react-bootstrap';\nimport { capitalize } from 'utilities/capitalize';\nexport var AddCategoryForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddCategoryForm, _React$Component);\n\n  function AddCategoryForm() {\n    var _this;\n\n    _classCallCheck(this, AddCategoryForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddCategoryForm).call(this));\n    _this.state = {\n      newCategory: '',\n      warning: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCategories = _this.updateCategories.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddCategoryForm, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      event.preventDefault();\n      this.setState({\n        newCategory: event.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n      var newCategory = this.state.newCategory.toLowerCase();\n\n      if (this.props.categories.labels.includes(newCategory)) {\n        this.setState({\n          warning: 'That category already exists.'\n        });\n      } else {\n        this.setState({\n          newCategory: ''\n        });\n        this.updateCategories(_toConsumableArray(this.props.categories.labels).concat([newCategory]));\n      }\n    }\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(categoryToDelete) {\n      var categoryIsEmpty = true;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.garments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var g = _step.value;\n\n          if (g.category === categoryToDelete) {\n            categoryIsEmpty = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (categoryIsEmpty) {\n        this.updateCategories(this.props.categories.labels.filter(function (label) {\n          return label !== categoryToDelete;\n        }));\n      } else {\n        this.setState({\n          warning: 'Sorry, only empty categories can be deleted.  ' + 'Please recategorize any clothing items in this category and try again.'\n        });\n      }\n    }\n  }, {\n    key: \"updateCategories\",\n    value: function updateCategories(newCategoryLabels) {\n      return this.props.firestore.set({\n        collection: 'categories',\n        doc: this.props.categories.id\n      }, {\n        labels: newCategoryLabels,\n        userID: this.props.uid\n      }, {\n        merge: true\n      }).then(function () {\n        console.log(\"Document successfully written!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    } // TODO:  Seed account with a few default categories when they sign up.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.categories) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, this.props.categories.labels.map(function (label, index) {\n          return React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, capitalize(label), React.createElement(Button, {\n            onClick: function onClick() {\n              _this2.onDelete(label);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"x\"));\n        })), React.createElement(\"form\", {\n          onSubmit: this.onSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.newCategory,\n          placeholder: \"Enter new category...\",\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Submit\")), React.createElement(Modal, {\n          show: !!this.state.warning.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, this.state.warning)), React.createElement(Modal.Footer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Button, {\n          bsStyle: \"primary\",\n          onClick: function onClick() {\n            return _this2.setState({\n              warning: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Okay\"))));\n      } else {\n        return \"Loading...\";\n      }\n    }\n  }]);\n\n  return AddCategoryForm;\n}(React.Component);\nAddCategoryForm.propTypes = {\n  user: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uid: state.firebase.auth.uid,\n    categories: state.firestore.ordered.categories ? state.firestore.ordered.categories[0] : null,\n    garments: state.firestore.ordered.garments\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect())(AddCategoryForm);","map":{"version":3,"sources":["/Users/jenniferpierce/Code/example2/src/pages/closet/AddCategoryForm.js"],"names":["React","PropTypes","connect","compose","firestoreConnect","Button","Modal","capitalize","AddCategoryForm","state","newCategory","warning","onChange","bind","onSubmit","onDelete","updateCategories","event","preventDefault","setState","target","value","toLowerCase","props","categories","labels","includes","categoryToDelete","categoryIsEmpty","garments","g","category","filter","label","newCategoryLabels","firestore","set","collection","doc","id","userID","uid","merge","then","console","log","catch","error","map","index","length","Component","propTypes","user","object","mapStateToProps","firebase","auth","ordered"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { Button, Modal } from 'react-bootstrap'\n\nimport { capitalize } from 'utilities/capitalize'\n\nexport class AddCategoryForm extends React.Component {\n  static propTypes = {\n    user: PropTypes.object\n  }\n\n  constructor () {\n    super()\n\n    this.state = {\n      newCategory: '',\n      warning: ''\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDelete = this.onDelete.bind(this)\n    this.updateCategories = this.updateCategories.bind(this)\n  }\n\n  onChange (event) {\n    event.preventDefault()\n    this.setState({newCategory: event.target.value})\n  }\n\n  onSubmit (event) {\n    event.preventDefault()\n\n    const newCategory = this.state.newCategory.toLowerCase()\n    if (this.props.categories.labels.includes(newCategory)) {\n      this.setState({\n        warning: 'That category already exists.'\n      })\n    } else {\n      this.setState({ newCategory: '' })\n      this.updateCategories([...this.props.categories.labels, newCategory])\n    }\n  }\n\n  onDelete (categoryToDelete) {\n    let categoryIsEmpty = true\n    for (const g of this.props.garments) {\n      if (g.category === categoryToDelete) {\n        categoryIsEmpty = false\n        break\n      }\n    }\n\n    if (categoryIsEmpty){\n      this.updateCategories(this.props.categories.labels.filter(label => (\n        label !== categoryToDelete\n      )))\n    } else {\n      this.setState({\n        warning: 'Sorry, only empty categories can be deleted.  ' +\n        'Please recategorize any clothing items in this category and try again.'\n      })\n    }\n  }\n\n  updateCategories (newCategoryLabels) {\n    return this.props.firestore.set({ collection: 'categories', doc: this.props.categories.id },\n      {labels: newCategoryLabels, userID: this.props.uid}, { merge: true })\n      .then(function() {\n        console.log(\"Document successfully written!\");\n      })\n      .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n      });\n  }\n\n  // TODO:  Seed account with a few default categories when they sign up.\n  render () {\n    if (this.props.categories) {\n      return (\n        <div>\n          <div>\n            { this.props.categories.labels.map((label, index) => (\n                <p key={index}>\n                  { capitalize(label) }\n                  <Button onClick={ () => {this.onDelete(label)} }>x</Button>\n                </p>\n              )\n            )}\n          </div>\n          <form onSubmit={this.onSubmit}>\n            <input\n              type='text'\n              value={this.state.newCategory}\n              placeholder='Enter new category...'\n              onChange={this.onChange} />\n            <button type='submit'>\n              Submit\n            </button>\n          </form>\n\n          <Modal show={!!this.state.warning.length}>\n            <Modal.Body>\n              <p>{ this.state.warning }</p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button bsStyle='primary' onClick={() => this.setState({ warning: '' })}>\n                Okay\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      )\n    } else {\n      return \"Loading...\"\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  uid: state.firebase.auth.uid,\n  categories: state.firestore.ordered.categories ?\n    state.firestore.ordered.categories[0] :\n    null,\n  garments: state.firestore.ordered.garments\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect()\n)(AddCategoryForm)\n"]},"metadata":{},"sourceType":"module"}