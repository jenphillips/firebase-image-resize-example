{"ast":null,"code":"export var deleteGarment = function deleteGarment(firestore, gID) {\n  return firestore.delete({\n    collection: 'garments',\n    doc: gID\n  }).then(function () {\n    console.log(\"Garment deleted from database.\");\n  }).catch(function (error) {\n    console.error(\"Error deleting garment from database: \", error);\n  });\n};\nexport var deleteImage = function deleteImage(firebase, image) {\n  // Deletes image file from storage, and image metadata from firestore 'images' collection.\n  // deleteFile(storagePath, dbPath)\n  console.log(image);\n  return firebase.deleteFile(image.fullPath, \"images/\".concat(image.id)).then(function () {\n    console.log(\"Image deleted from storage.\");\n  }).catch(function (error) {\n    console.error(\"Error deleting image from storage: \", error);\n  });\n};\nexport var deleteGarmentFromCapsule = function deleteGarmentFromCapsule(firestore, gID, capsuleID, capsuleGarments) {\n  var updatedGarments = capsuleGarments.filter(function (g) {\n    return g !== gID;\n  });\n  return firestore.set({\n    collection: 'capsules',\n    doc: capsuleID\n  }, {\n    garments: updatedGarments\n  }, {\n    merge: true\n  }).then(function () {\n    console.log(\"Garment deleted from capsule.\");\n  }).catch(function (error) {\n    console.error(\"Error deleting garment from capsule: \", error);\n  });\n};\nexport var deleteGarmentFromAllCapsules = function deleteGarmentFromAllCapsules(firestore, gID, capsules) {\n  // Expects capsules to be pre-filtered to include only capsules\n  // that include the garment to delete - can change this if needed.\n  var promises = [];\n  capsules.forEach(function (c) {\n    promises.push(deleteGarmentFromCapsule(firestore, gID, c.id, c.garments));\n  });\n  return Promise.all(promises).then(function () {\n    console.log(\"Garment deleted from capsules.\");\n  }).catch(function (error) {\n    console.error(\"Error deleting garment from capsules: \", error);\n  });\n};\nexport var deleteOutfitsWithGarment = function deleteOutfitsWithGarment(firestore, gID, outfits) {\n  var promises = [];\n  outfits.forEach(function (o) {\n    if (o.garments.includes(gID)) {\n      promises.push(firestore.delete({\n        collection: 'outfits',\n        doc: o.id\n      }));\n    }\n  });\n  return Promise.all(promises).then(function () {\n    console.log(\"Outfits all deleted.\");\n  }).catch(function (error) {\n    console.error(\"Error deleting outfits: \", error);\n  });\n};","map":{"version":3,"sources":["/Users/jenniferpierce/Code/closet app/closetchart/src/shared/deleteMethods.js"],"names":["deleteGarment","firestore","gID","delete","collection","doc","then","console","log","catch","error","deleteImage","firebase","image","deleteFile","fullPath","id","deleteGarmentFromCapsule","capsuleID","capsuleGarments","updatedGarments","filter","g","set","garments","merge","deleteGarmentFromAllCapsules","capsules","promises","forEach","c","push","Promise","all","deleteOutfitsWithGarment","outfits","o","includes"],"mappings":"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","sourcesContent":["export const deleteGarment = (firestore, gID) => {\n  return firestore.delete({ collection: 'garments', doc: gID })\n    .then(() => {\n      console.log(\"Garment deleted from database.\");\n    })\n    .catch(error => {\n      console.error(\"Error deleting garment from database: \", error);\n    });\n}\n\nexport const deleteImage = (firebase, image) => {\n  // Deletes image file from storage, and image metadata from firestore 'images' collection.\n  // deleteFile(storagePath, dbPath)\n  console.log(image)\n  return firebase.deleteFile(image.fullPath, `images/${image.id}`)\n    .then(() => {\n      console.log(\"Image deleted from storage.\");\n    })\n    .catch(error => {\n      console.error(\"Error deleting image from storage: \", error);\n    });\n}\n\nexport const deleteGarmentFromCapsule = (firestore, gID, capsuleID, capsuleGarments) => {\n  const updatedGarments = capsuleGarments.filter(g => g !== gID)\n  return firestore.set({\n    collection: 'capsules',\n    doc: capsuleID\n  }, { garments: updatedGarments }, { merge: true })\n    .then(() => {\n      console.log(\"Garment deleted from capsule.\");\n    })\n    .catch(error => {\n      console.error(\"Error deleting garment from capsule: \", error);\n    });\n}\n\nexport const deleteGarmentFromAllCapsules = (firestore, gID, capsules) => {\n  // Expects capsules to be pre-filtered to include only capsules\n  // that include the garment to delete - can change this if needed.\n  let promises = []\n  capsules.forEach(c => {\n    promises.push(\n      deleteGarmentFromCapsule(firestore, gID, c.id, c.garments)\n    )\n  })\n\n  return Promise.all(promises)\n    .then(function() {\n      console.log(\"Garment deleted from capsules.\");\n    })\n    .catch(function(error) {\n      console.error(\"Error deleting garment from capsules: \", error);\n    });\n}\n\nexport const deleteOutfitsWithGarment = (firestore, gID, outfits) => {\n  let promises = []\n  outfits.forEach(o => {\n    if (o.garments.includes(gID)) {\n      promises.push(\n        firestore.delete({\n          collection: 'outfits',\n          doc: o.id\n        })\n      )\n    }\n  })\n\n  return Promise.all(promises)\n    .then(function() {\n      console.log(\"Outfits all deleted.\");\n    })\n    .catch(function(error) {\n      console.error(\"Error deleting outfits: \", error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}