{"ast":null,"code":"import _classCallCheck from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jenniferpierce/Code/example2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jenniferpierce/Code/example2/src/components/auth/AuthButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect, isLoaded, isEmpty } from 'react-redux-firebase';\n\nvar AuthButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthButton, _Component);\n\n  function AuthButton() {\n    var _this;\n\n    _classCallCheck(this, AuthButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthButton).call(this));\n\n    _this.createNewUser = function (_ref) {\n      var email = _ref.email,\n          password = _ref.password,\n          username = _ref.username;\n\n      _this.props.firebase.createUser({\n        email: email,\n        password: password\n      }, {\n        username: username,\n        email: email\n      });\n    };\n\n    _this.createNewUser = _this.createNewUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AuthButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var testCredentials = {\n        email: 'ronin.fast@gmail.com',\n        password: 'jimbob77',\n        username: 'Jen'\n      };\n\n      if (!isLoaded(this.props.auth)) {\n        return null;\n      }\n\n      if (isEmpty(this.props.auth)) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.firebase.login(testCredentials);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Log In\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.createNewUser(testCredentials);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Sign Up\"));\n      }\n\n      return React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.firebase.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Log Out\");\n    }\n  }]);\n\n  return AuthButton;\n}(Component);\n\nAuthButton.propTypes = {\n  auth: PropTypes.object,\n  firebase: PropTypes.shape({\n    login: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired\n  })\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps, null), firebaseConnect())(AuthButton);","map":{"version":3,"sources":["/Users/jenniferpierce/Code/example2/src/components/auth/AuthButton.js"],"names":["React","Component","PropTypes","connect","compose","firebaseConnect","isLoaded","isEmpty","AuthButton","createNewUser","email","password","username","props","firebase","createUser","bind","testCredentials","auth","login","logout","propTypes","object","shape","func","isRequired","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,OAApC,QAAmD,sBAAnD;;IAEMC,U;;;;;AASJ,wBAAc;AAAA;;AAAA;;AACZ;;AADY,UAMdC,aANc,GAME,gBAAmC;AAAA,UAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,UAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,UAAfC,QAAe,QAAfA,QAAe;;AACjD,YAAKC,KAAL,CAAWC,QAAX,CAAoBC,UAApB,CACE;AAAEL,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA;AAAT,OADF,EAEE;AAAEC,QAAAA,QAAQ,EAARA,QAAF;AAAYF,QAAAA,KAAK,EAALA;AAAZ,OAFF;AAID,KAXa;;AAGZ,UAAKD,aAAL,GAAqB,MAAKA,aAAL,CAAmBO,IAAnB,uDAArB;AAHY;AAIb;;;;6BASQ;AAAA;;AAEP,UAAIC,eAAe,GAAG;AACpBP,QAAAA,KAAK,EAAE,sBADa;AAEpBC,QAAAA,QAAQ,EAAE,UAFU;AAGpBC,QAAAA,QAAQ,EAAE;AAHU,OAAtB;;AAMA,UAAI,CAACN,QAAQ,CAAC,KAAKO,KAAL,CAAWK,IAAZ,CAAb,EAAgC;AAC9B,eAAO,IAAP;AACD;;AACD,UAAIX,OAAO,CAAC,KAAKM,KAAL,CAAWK,IAAZ,CAAX,EAA8B;AAC5B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,KAAL,CAAWC,QAAX,CAAoBK,KAApB,CAA0BF,eAA1B,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACR,aAAL,CAAmBQ,eAAnB,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;AACD,aAAO;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACJ,KAAL,CAAWC,QAAX,CAAoBM,MAApB,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;;;EA1CsBnB,S;;AAAnBO,U,CACGa,S,GAAY;AACjBH,EAAAA,IAAI,EAAEhB,SAAS,CAACoB,MADC;AAEjBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,KAAV,CAAgB;AACxBJ,IAAAA,KAAK,EAAEjB,SAAS,CAACsB,IAAV,CAAeC,UADE;AAExBL,IAAAA,MAAM,EAAElB,SAAS,CAACsB,IAAV,CAAeC;AAFC,GAAhB;AAFO,C;;AA4CrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAES,KAAK,CAACb,QAAN,CAAeI;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAed,OAAO,CACpBD,OAAO,CAACuB,eAAD,EAAkB,IAAlB,CADa,EAEpBrB,eAAe,EAFK,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseConnect, isLoaded, isEmpty } from 'react-redux-firebase'\n\nclass AuthButton extends Component {\n  static propTypes = {\n    auth: PropTypes.object,\n    firebase: PropTypes.shape({\n      login: PropTypes.func.isRequired,\n      logout: PropTypes.func.isRequired\n    })\n  }\n\n  constructor() {\n    super()\n\n    this.createNewUser = this.createNewUser.bind(this)\n  }\n\n  createNewUser = ({ email, password, username }) => {\n    this.props.firebase.createUser(\n      { email, password },\n      { username, email }\n    )\n  }\n\n  render() {\n\n    let testCredentials = {\n      email: 'ronin.fast@gmail.com',\n      password: 'jimbob77',\n      username: 'Jen'\n    }\n\n    if (!isLoaded(this.props.auth)) {\n      return null\n    }\n    if (isEmpty(this.props.auth)) {\n      return (\n        <span>\n          <button onClick={() => this.props.firebase.login(testCredentials)}>Log In</button>\n          <button onClick={() => this.createNewUser(testCredentials)}>Sign Up</button>\n        </span>\n      )\n    }\n    return <button onClick={() => this.props.firebase.logout()}>Log Out</button>\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth\n})\n\nexport default compose(\n  connect(mapStateToProps, null),\n  firebaseConnect()\n)(AuthButton)\n"]},"metadata":{},"sourceType":"module"}