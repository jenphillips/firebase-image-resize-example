{"ast":null,"code":"import _classCallCheck from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jenniferpierce/Code/closet app/closetchart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jenniferpierce/Code/closet app/closetchart/src/pages/closet/EditCategoryForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Select from 'react-select';\nimport FormButton from 'components/forms/FormButton';\nimport { capitalize } from 'utilities/capitalize';\nexport var EditCategoryForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditCategoryForm, _React$Component);\n\n  function EditCategoryForm(props) {\n    var _this;\n\n    _classCallCheck(this, EditCategoryForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditCategoryForm).call(this, props));\n    _this.state = {\n      active: false,\n      selectedCategory: {\n        value: props.garment.category,\n        label: capitalize(props.garment.category)\n      }\n    };\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditCategoryForm, [{\n    key: \"onSelect\",\n    value: function onSelect(selectedOption) {\n      this.setState({\n        selectedCategory: selectedOption\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.setState({\n        active: false\n      });\n      var newCategory = this.state.selectedCategory.value;\n      return this.props.firestore.set({\n        collection: 'garments',\n        doc: this.props.garment.id\n      }, {\n        category: newCategory\n      }, {\n        merge: true\n      }).then(function () {\n        console.log(\"Document successfully written!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var displayCategory = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, capitalize(this.state.selectedCategory.label)), React.createElement(FormButton, {\n        onClick: function onClick() {\n          return _this2.setState({\n            active: true\n          });\n        },\n        icon: \"pencil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n      var options = [];\n\n      if (this.props.categories) {\n        options = this.props.categories.labels.map(function (cat) {\n          return {\n            value: cat,\n            label: capitalize(cat)\n          };\n        });\n      }\n\n      var editCategory = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Select, {\n        options: options,\n        value: this.state.selectedCategory,\n        onChange: this.onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            active: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Cancel\"));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.active ? editCategory : displayCategory);\n    }\n  }]);\n\n  return EditCategoryForm;\n}(React.Component);\nEditCategoryForm.propTypes = {\n  garment: PropTypes.object\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.firestore.ordered.categories ? state.firestore.ordered.categories[0] : null\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect())(EditCategoryForm);","map":{"version":3,"sources":["/Users/jenniferpierce/Code/closet app/closetchart/src/pages/closet/EditCategoryForm.js"],"names":["React","PropTypes","firestoreConnect","connect","compose","Select","FormButton","capitalize","EditCategoryForm","props","state","active","selectedCategory","value","garment","category","label","onSelect","bind","onSubmit","selectedOption","setState","newCategory","firestore","set","collection","doc","id","merge","then","console","log","catch","error","displayCategory","options","categories","labels","map","cat","editCategory","Component","propTypes","object","mapStateToProps","ordered"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Select from 'react-select'\n\nimport FormButton from 'components/forms/FormButton'\nimport { capitalize } from 'utilities/capitalize'\n\nexport class EditCategoryForm extends React.Component {\n  static propTypes = {\n    garment: PropTypes.object\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      active: false,\n      selectedCategory: {value: props.garment.category, label: capitalize(props.garment.category)}\n    }\n\n    this.onSelect = this.onSelect.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onSelect (selectedOption) {\n    this.setState({selectedCategory: selectedOption})\n  }\n\n  onSubmit () {\n    this.setState({active: false})\n\n    const newCategory = this.state.selectedCategory.value\n\n    return this.props.firestore.set({ collection: 'garments', doc: this.props.garment.id },\n      {category: newCategory}, { merge: true })\n      .then(function() {\n        console.log(\"Document successfully written!\");\n      })\n      .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n      });\n  }\n\n  render () {\n    let displayCategory = <span>\n      <p>{capitalize(this.state.selectedCategory.label)}</p>\n      <FormButton\n        onClick={() => this.setState({active: true})}\n        icon='pencil' />\n    </span>\n\n    let options = []\n    if (this.props.categories) {\n      options = this.props.categories.labels.map(cat => ({\n        value: cat, label: capitalize(cat)\n      }))\n    }\n\n    let editCategory = <span>\n      <Select\n        options={options}\n        value={this.state.selectedCategory}\n        onChange={this.onSelect}\n      />\n      <button onClick={this.onSubmit}>\n        Submit\n      </button>\n      <button onClick={() => this.setState({active: false})}>\n        Cancel\n      </button>\n    </span>\n\n    return (\n      <div>\n        { this.state.active ? editCategory : displayCategory }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  categories: state.firestore.ordered.categories ?\n    state.firestore.ordered.categories[0] :\n    null,\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect()\n)(EditCategoryForm)\n"]},"metadata":{},"sourceType":"module"}